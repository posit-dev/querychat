% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/querychat.R
\name{querychat_init}
\alias{querychat_init}
\title{Call this once outside of any server function}
\usage{
querychat_init(
  data_source,
  greeting = NULL,
  data_description = NULL,
  extra_instructions = NULL,
  create_chat_func = deprecated(),
  system_prompt = NULL,
  auto_close_data_source = TRUE,
  client = NULL
)
}
\arguments{
\item{data_source}{A querychat_data_source object created by
\code{querychat_data_source()}.

To create a data source:
\itemize{
\item For data frame: \code{querychat_data_source(df, tbl_name = "my_table")}
\item For database: \code{querychat_data_source(conn, "table_name")}
}}

\item{greeting}{A string in Markdown format, containing the initial message
to display to the user upon first loading the chatbot. If not provided, the
LLM will be invoked at the start of the conversation to generate one.}

\item{data_description}{A string containing a data description for the chat
model. We have found that formatting the data description as a markdown
bulleted list works best.}

\item{extra_instructions}{A string containing extra instructions for the
chat model.}

\item{create_chat_func}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}. Use the \code{client}
argument instead.}

\item{system_prompt}{A string containing the system prompt for the chat
model. The default generates a generic prompt, which you can enhance via
the \code{data_description} and \code{extra_instructions} arguments.}

\item{auto_close_data_source}{Should the data source connection be
automatically closed when the shiny app stops? Defaults to TRUE.}

\item{client}{An \code{ellmer::Chat} object, a string to be passed to
\code{\link[ellmer:chat-any]{ellmer::chat()}} describing the model to use (e.g. \code{"openai/gpt-4o"}), or a
function that creates a chat client. When using a function, the function
should take \code{system_prompt} as an argument and return an \code{ellmer::Chat}
object.

If \code{client} is not provided, querychat consults the \code{querychat.client} R
option, which can be any of the described options, or the
\code{QUERYCHAT_CLIENT} environment variable, which can be set to a a
provider-model string. If no option is provided, querychat defaults to
using \code{\link[ellmer:chat_openai]{ellmer::chat_openai()}}.}
}
\value{
An object that can be passed to \code{querychat_server()} as the
\code{querychat_config} argument. By convention, this object should be named
\code{querychat_config}.
}
\description{
This will perform one-time initialization that can then be shared by all
Shiny sessions in the R process.
}
